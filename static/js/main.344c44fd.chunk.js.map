{"version":3,"sources":["components/Form.js","components/Titles.js","components/WeatherApp.js","App.js","redux/store.js","redux/reducer.js","index.js"],"names":["connect","dispatch","console","log","selectCity","city","setQuery","weathers","useState","term","setTerm","onSubmit","e","preventDefault","className","type","value","onChange","target","placeholder","onClick","Titles","state","hava","map","items","main","Math","floor","temp","cityName","countryName","App","Weather","combineReducers","action","payload","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAmCA,IAQeA,eARU,SAACC,GAI1B,OAFAC,QAAQC,IAAI,iBAAiBF,EAASG,YAEhC,CAACC,KAAMJ,EAASG,cAIPJ,EAvCf,YAA6C,IAA7BM,EAA4B,EAA5BA,SAAWD,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,SAAW,EAClBC,mBAAS,IADS,mBACnCC,EADmC,KAC7BC,EAD6B,KAY1C,OAJAR,QAAQC,IAAR,YAAyBM,GACzBP,QAAQC,IAAIE,GACZH,QAAQC,IAAI,gBAAgBI,GAG1B,uBAAMI,SAVY,SAACC,GACnBA,EAAEC,iBAEFP,EAASG,IAOoBK,UAAU,cAAvC,UACE,uBACEC,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOF,QAClCG,YAAY,wBAEd,yBAAQJ,KAAK,SAASK,QAAS,kBAAIX,KAAnC,UACG,IADH,SAES,aCXAY,EAZA,WACb,OACE,qCACE,qBAAKP,UAAU,SACf,qBAAIA,UAAU,QAAd,UACG,IACD,mBAAGA,UAAU,gBAFf,qBCmCSd,eANO,SAACsB,GAGrB,OADApB,QAAQC,IAAI,QAAQmB,EAAMf,UACnB,CAACA,SAAUe,EAAMf,YAGXP,EAtCI,SAAC,GAAgB,IAAfO,EAAc,EAAdA,SACnBL,QAAQC,IAAI,WAAYI,GACxB,IAAMgB,EAAOhB,EAASiB,KAAI,SAACC,GAAD,OAE1B,8BACI,sBAAKX,UAAU,iBAAf,UACE,wDAGA,6BAAKW,EAAMC,OAEX,qBAAKZ,UAAU,aAAf,SACE,+BAAKa,KAAKC,MAAMH,EAAMI,MAAtB,aAGF,qBAAKf,UAAU,WAAf,SACE,+BACE,mBAAGA,UAAU,sBADf,IACyCW,EAAMK,SAD/C,KAC2DL,EAAMM,qBAb/DN,EAAMK,aAoBlB,OACI,8BACGP,OCVQS,MAdf,WACE,OACE,sBAAKlB,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,Q,OCXAmB,EAASC,YAAgB,CAC3B3B,SCJwB,WAExB,MAAM,CACF,CAACuB,SAAS,SAASC,YAAY,KAAML,KAAK,SAAUG,KAAK,MACzD,CAACC,SAAS,OAAOC,YAAY,KAAML,KAAK,QAASG,KAAK,MACtD,CAACC,SAAS,UAAUC,YAAY,KAAML,KAAK,QAASG,KAAK,MACzD,CAACC,SAAS,QAAQC,YAAY,KAAML,KAAK,OAAQG,KAAK,MACtD,CAACC,SAAS,SAASC,YAAY,KAAML,KAAK,QAASG,KAAK,QDF5DzB,WCO6B,WAAmF,IAAlFA,EAAiF,uDAAtE,CAAC0B,SAAS,OAAOC,YAAY,KAAML,KAAK,QAASG,KAAK,MAAOM,EAAS,uCAC/G,MAAkB,kBAAdA,EAAOpB,KACAoB,EAAOC,QAEXhC,KDPEiC,EAAOC,YAAYL,GEAhCM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.344c44fd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\n\nfunction Form({ setQuery , city, weathers}) {\n  const [term, setTerm] = useState('');\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    setQuery(term);\n  };\n  console.log(`form term`, term);\n  console.log(city);\n  console.log(\"props weather\",weathers )\n\n  return (\n    <form onSubmit={handleClick} className=\"search-form\">\n      <input\n        type=\"text\"\n        value={term}\n        onChange={(e) => setTerm(e.target.value)}\n        placeholder=\"Enter your cityname\"\n      />\n      <button type=\"button\" onClick={()=>term()}>\n        {' '}\n        Search{' '}\n      </button>\n    </form>\n    );\n\n \n  \n}\n\nconst mapDispatchToProps=(dispatch)=>{\n\nconsole.log(\"dispatch form:\",dispatch.selectCity);\n\nreturn{city: dispatch.selectCity};\n\n};\n\nexport default connect(mapDispatchToProps)\n(Form);\n","/** @format */\nimport React from 'react';\n\nconst Titles = () => {\n  return (\n    <>\n      <div className=\"card\"></div>\n      <h2 className=\"title\">\n        {' '}\n        <i className=\"fa fa-cloud\"></i>Weather App\n      </h2>\n    </>\n  );\n};\n\nexport default Titles;\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst WeatherApp = ({weathers}) => {\n  console.log(\"weathers\", weathers)\n  const hava = weathers.map((items)=>\n  \n  <div key={items.cityName}>\n      <div className=\"main-contanier\">\n        <h4>Live Weather Condition</h4>\n       \n\n        <h2>{items.main}</h2>\n\n        <div className=\"temprature\">\n          <h1>{Math.floor(items.temp)}&deg;C</h1>\n        </div>\n\n        <div className=\"location\">\n          <h3>\n            <i className=\"fa fa-street-view\"></i> {items.cityName}, {items.countryName}\n          </h3>\n        </div>\n      </div>\n    </div>\n  \n  )\nreturn (\n    <div>\n      {hava}\n    </div>\n  );\n  \n};\n\nconst mapStateToProps=(state)=>{\n\n  console.log(\"state\",state.weathers)\n  return {weathers: state.weathers}\n  \n  }\nexport default connect(mapStateToProps)(WeatherApp);\n","\nimport './App.css';\nimport Form from './components/Form';\nimport Titles from './components/Titles';\nimport WeatherApp from './components/WeatherApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Titles/>\n      \n      <Form/>\n\n      <WeatherApp/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport {weatherReducer,selectedCityReducer} from './reducer';\n\nconst Weather= combineReducers({\n    weathers: weatherReducer,\n    selectCity:selectedCityReducer,\n\n});\n\nexport const store= createStore(Weather)","export const weatherReducer=()=>{\n\n    return[\n        {cityName:'London',countryName:'GB', main:'Cloudy', temp:'15' },\n        {cityName:'Usak',countryName:'TR', main:'Sunny', temp:'25' },\n        {cityName:'Reading',countryName:'GB', main:'Sunny', temp:'20' },\n        {cityName:'Paris',countryName:'FR', main:'Rain', temp:'12' },\n        {cityName:'Ankara',countryName:'TR', main:'Clear', temp:'15' },\n    ]\n\n}\n\nexport const selectedCityReducer=(selectCity={cityName:'Usak',countryName:'TR', main:'Sunny', temp:'25' },action)=>{\n    if (action.type==='City-Selected'){\n        return action.payload\n    }\n    return selectCity\n}","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}